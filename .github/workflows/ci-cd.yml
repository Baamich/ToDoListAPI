name: CI/CD Pipeline

on:
  push:
    branches:
      - CI/CD

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [todo_api, todo_blazor]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}:latest -f ${{ matrix.service }}/Dockerfile ${{ matrix.service }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: SSH into Server and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/todo_api:latest
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/todo_blazor:latest
            docker network create todo_network || true
            docker stop todo_api todo_blazor || true
            docker rm todo_api todo_blazor || true
            docker run -d --name todo_api --network todo_network -p 8090:8090 ${{ secrets.DOCKERHUB_USERNAME }}/todo_api:latest
            docker run -d --name todo_blazor --network todo_network -p 80:80 ${{ secrets.DOCKERHUB_USERNAME }}/todo_blazor:latest
